package_update: true
packages: [tree]
write_files:
- path: /etc/systemd/resolved.conf
  append: true
  content: |
    MulticastDNS=yes

- path: /etc/systemd/system/mdns@.service
  content: |
    [Service]
    Type=oneshot
    ExecStart=/usr/bin/systemd-resolve --set-mdns=yes --interface=%i
    After=sys-subsystem-net-devices-%i.device

    [Install]
    WantedBy=sys-subsystem-net-devices-%i.device

- path: /etc/systemd/system/step-ca.service
  content: |
    [Unit]
    Description=step-ca service
    Documentation=https://smallstep.com/docs/step-ca
    Documentation=https://smallstep.com/docs/step-ca/certificate-authority-server-production
    After=network-online.target
    Wants=network-online.target
    StartLimitIntervalSec=30
    StartLimitBurst=3
    ConditionFileNotEmpty=/etc/step-ca/config/ca.json
    ConditionFileNotEmpty=/etc/step-ca/secrets/password.txt

    [Service]
    Type=simple
    User=step
    Group=step
    Environment=STEPPATH=/etc/step-ca
    WorkingDirectory=/etc/step-ca
    ExecStart=/usr/bin/step-ca config/ca.json --password-file secrets/password.txt
    ExecReload=/bin/kill --signal HUP $MAINPID
    Restart=on-failure
    RestartSec=5
    TimeoutStopSec=30
    StartLimitInterval=30
    StartLimitBurst=3

    ; Process capabilities & privileges
    AmbientCapabilities=CAP_NET_BIND_SERVICE
    CapabilityBoundingSet=CAP_NET_BIND_SERVICE
    SecureBits=keep-caps
    NoNewPrivileges=yes

    ; Sandboxing
    ProtectSystem=full
    ProtectHome=true
    RestrictNamespaces=true
    RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6
    PrivateTmp=true
    PrivateDevices=true
    ProtectClock=true
    ProtectControlGroups=true
    ProtectKernelTunables=true
    ProtectKernelLogs=true
    ProtectKernelModules=true
    LockPersonality=true
    RestrictSUIDSGID=true
    RemoveIPC=true
    RestrictRealtime=true
    SystemCallFilter=@system-service
    SystemCallArchitectures=native
    MemoryDenyWriteExecute=true
    ReadWriteDirectories=/etc/step-ca/db

    [Install]
    WantedBy=multi-user.target

runcmd:
- systemctl restart systemd-resolved.service
- "for interface in $(ip -o link show | awk -F': ' '{print $2}' | grep -v lo); do systemctl start mdns@$interface.service; done"
- "for interface in $(ip -o link show | awk -F': ' '{print $2}' | grep -v lo); do systemctl enable mdns@$interface.service; done"
